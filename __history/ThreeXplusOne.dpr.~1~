program ThreeXplusOne;

{$APPTYPE CONSOLE}

{$R *.res}


uses
  System.SysUtils;

Const N=100;

Type
  TArray = array[1..N] of byte;

Var
  A,B:TArray;
  S,I:integer;

  function SlojenieNaEd(Const Chislo:TArray;
                      Var   Size:integer):TArray;
  Var
    Num1:TArray;
    Carry:byte;
    I:integer;
    Sum:Byte;



begin
    Num1:=Chislo;
    Carry:=0;
    for i := 1 to Size do
    begin

      if I=1 then
       Sum:= Carry + Num1[i] + 1
      else
        Sum:=Carry+Num1[i];


      Num1[i]:= Sum mod 10;


      Carry:= Sum div 10;


      if (i = Size) and (Carry = 1) then
      begin
        Size:= Size + 1;
        Num1[i+1]:= Carry;
      end;
    end;
    Result:=Num1;
end;

Function MultiplicationFor3(Const ChisloForMultiply: TArray;
                            Var Size:integer): TArray;
var
  IntermediateCalc : TArray;
  i: LongInt;
  DigigtsProd: Word;
  CarryProd: Byte;
  //IntermediateCalc - intermediate calculations
  //i - cycle counter
  //DigigtsProd - product of the digits of the first and second number
  //CarryProd - ñarry the digit (if there is) to the next element (for DigigtsProd)
begin

  //Reset carry
  CarryProd:= 0;

  //Multiply the digits of the first number by the second number

    for i := 1 to Size do
    begin

      //Starting to multiply the last digits of the numbers (in the mirrored view it is first)
      //and add the carry (if there is).
      DigigtsProd:= ChisloForMultiply[i] * 3 + CarryProd;

      //The integer part of dividing by NS is the carry that will go to the next element
      CarryProd:= DigigtsProd div 10;

      //DigigtsSum mod NS is the digit in the ProductResult
      IntermediateCalc[i] := DigigtsProd mod 10;

      if (I=Size) and (CarryProd<>0) then
      begin
        Inc(Size);
        IntermediateCalc[i+1]:=CarryProd;
      end;
    end;
    Result:=IntermediateCalc;

end;

begin
  for i := 1 to length(A) do
  begin
        A[i]:= 0;
        B[i]:=0;
  end;
  S:=10;
  for i := S downto 1 do
  begin
    A[i]:=5;
    write(A[i]);
  end;

  writeln;
  writeln('result ');
  B:=SlojenieNaEd(MultiplicationFor3(A,S),S);
  for i := S downto 1 do
    Write(B[i]);
  writeln;
  writeln(S);
  readln;
end.
